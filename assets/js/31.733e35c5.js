(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{426:function(t,_,a){t.exports=a.p+"assets/img/fe-engineering.257c7093.png"},591:function(t,_,a){"use strict";a.r(_);var s=a(44),v=Object(s.a)({},(function(){var t=this,_=t.$createElement,s=t._self._c||_;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("前端工程化，主要考虑或解决的问题，如：如何多人协作开发、组件模块如何复用、如何调试部署、版本如何管理控制、性能如何优化等。因此，想做好前端工程化，需要做好以下几件事：")]),t._v(" "),s("h3",{attrs:{id:"_1-开发规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-开发规范"}},[t._v("#")]),t._v(" 1. 开发规范")]),t._v(" "),s("p",[t._v("制定好开发、部署的目录规范、编码规范。好的目录规范能让项目结构清晰，便于维护和扩展；好的编码规范能让团队内同学的代码风格统一，便于代码审查。")]),t._v(" "),s("h3",{attrs:{id:"_2-模块化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-模块化"}},[t._v("#")]),t._v(" 2. 模块化")]),t._v(" "),s("p",[t._v("​\t针对 JavaScript、CSS，以功能或业务为单元组织代码。JavaScript模块化方案很多，如："),s("code",[t._v("AMD")]),t._v("/ "),s("code",[t._v("CommonJS")]),t._v(" / "),s("code",[t._v("UMD")]),t._v(" / "),s("code",[t._v("ES6 Module")]),t._v("等。CSS模块化开发基本上都是在 "),s("code",[t._v("less")]),t._v("、"),s("code",[t._v("sass")]),t._v("、"),s("code",[t._v("stylus")]),t._v("等预处理器的 "),s("code",[t._v("import")]),t._v("/"),s("code",[t._v("mixin")]),t._v("特性支持下实现的。")]),t._v(" "),s("h3",{attrs:{id:"_3-组件化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-组件化"}},[t._v("#")]),t._v(" 3. 组件化")]),t._v(" "),s("p",[t._v("​\t\t把页面拆分成多个组件（component），每个组件依赖的CSS、JavaScript、模板、图片等资源放在一起开发和维护。组件是资源独立的，组件在系统内部可复用，组件和组件之间可以嵌套。")]),t._v(" "),s("h3",{attrs:{id:"_4-组件库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-组件库"}},[t._v("#")]),t._v(" 4. 组件库")]),t._v(" "),s("p",[t._v("​\t\t有了组件化，我们还希望把一些非常通用的组件或者 javascript 模块放到一个公共的地方供团队共享，方便新项目的复用，这就形成了组件库。")]),t._v(" "),s("h3",{attrs:{id:"_5-性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-性能优化"}},[t._v("#")]),t._v(" 5. 性能优化")]),t._v(" "),s("p",[t._v("通过工程化手段来解决性能优化问题。比如常见的，请求合并、资源压缩、CDN，甚至一些前沿的优化手段如：bigpipe和bigrender，都是通过工程化手段来保证的，而对业务开发者都是透明的。")]),t._v(" "),s("h3",{attrs:{id:"_6-项目部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-项目部署"}},[t._v("#")]),t._v(" 6. 项目部署")]),t._v(" "),s("p",[t._v("项目部署一般包括静态资源缓存、CDN、增量发布等问题。合理的静态资源部署可以为前端性能带来较大的优化空间，而增量发布又为项目的版本控制、A/B Test方案提供了保证。")]),t._v(" "),s("h3",{attrs:{id:"_7-开发流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-开发流程"}},[t._v("#")]),t._v(" 7. 开发流程")]),t._v(" "),s("p",[t._v("完整的开发流程包括本地化开发调试、视觉走查确认、前后端联调、测试、上线等环节，通过一些工具对开发流程进行改善可以大幅度降低研发成本。")]),t._v(" "),s("h3",{attrs:{id:"_8-工程工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-工程工具"}},[t._v("#")]),t._v(" 8. 工程工具")]),t._v(" "),s("p",[t._v("工程工具包括构建与优化工具、开发、调试、部署等流程工具、组件获取和提交工具等。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(426),alt:""}})])])}),[],!1,null,null,null);_.default=v.exports}}]);