(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{592:function(t,s,a){"use strict";a.r(s);var e=a(44),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("​\t\t任何实际项目的开发都不仅仅是完成编码，规范的开发流程和严谨的测试都是不可或缺的。合理使用各种工具来进行测试开发与调试，能够极大地提升编写代码的效率，使开发过程事半功倍、对于提高代码质量、稳定线上服务至关重要。")]),t._v(" "),a("h2",{attrs:{id:"一、测试工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、测试工具"}},[t._v("#")]),t._v(" 一、测试工具")]),t._v(" "),a("h3",{attrs:{id:"_1-eslint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-eslint"}},[t._v("#")]),t._v(" 1. ESLint")]),t._v(" "),a("p",[t._v("在日常的团队开发中，为了避免出现低级bug和统一代码风格，通常会在开发前约定一套编码规范。为了保证规范的执行，可以使用Lint工具和代码风格检测工具。")]),t._v(" "),a("p",[t._v("ESLint就是一个Lint工具，旨在为大家提供一个可扩展、每条规则独立、不内置编码风格的语法检查工具。ESLint有别于JSLint的地方就是，它被设计成完全可配置的，每一条规则都是一个插件，用户完全可以根据自己的需求来选择使用哪些规则。")]),t._v(" "),a("p",[t._v("比如，报错就可以设计为“警告”和“错误”两个等级，或者禁用。下面介绍一下ESLint的配置。")]),t._v(" "),a("h4",{attrs:{id:"_1-1-配置eslint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-配置eslint"}},[t._v("#")]),t._v(" 1.1 配置ESLint")]),t._v(" "),a("ul",[a("li",[t._v("用JavaScript注解的方式，将配置信息直接加到文件里。")]),t._v(" "),a("li",[t._v("使用JavaScript、JSON或YAML文件为整个目录定义配置信息，文件格式可以是："),a("code",[t._v(".eslintrc")]),t._v(" 或 "),a("code",[t._v("package.json")]),t._v("。")])]),t._v(" "),a("p",[t._v("ESLint会自动查找读取配置文件。")]),t._v(" "),a("h4",{attrs:{id:"_1-2-eslint规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-eslint规则"}},[t._v("#")]),t._v(" 1.2 ESLint规则")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Enviroments")]),t._v(" "),a("p",[t._v("脚本将要运行的环境，每个环境都有自己预定义好的全局变量集合。通过 "),a("code",[t._v("env")]),t._v(" 关键字配置 "),a("strong",[t._v("Enviroments")]),t._v(" 选项，下面的配置表示脚本将运行在浏览器和node环境，还可以配置Commonjs、jQuery等很多选项。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"env"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"browser"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"node"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("Globals")]),t._v(" "),a("p",[t._v("在脚本运行期间需要额外加入的全局变量。当变量在当前文件中未定义却被访问时，会触发未定义规则警告。因此，如果设置了一些全局变量，则需要在ESLint的配置文件中进行配置。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"globals"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"varA"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"varB"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("上述配置表明 varA、varB都是全局变量，其中varB的值不可写（只读）。")])]),t._v(" "),a("li",[a("p",[t._v("Rules")]),t._v(" "),a("p",[t._v("ESLint提供了大量的规则，用户通过配置规则是否生效来定义自己的项目需要使用哪些规则。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("“rules”"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"eqeqe"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"curly"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"_2-工具包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-工具包"}},[t._v("#")]),t._v(" 2. 工具包")]),t._v(" "),a("h4",{attrs:{id:"_1-1-eslint-loader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-eslint-loader"}},[t._v("#")]),t._v(" 1.1 eslint-loader")]),t._v(" "),a("p",[t._v("配合webpack使用的ESLint loader")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("安装：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" eslint-loader\n")])])])]),t._v(" "),a("li",[a("p",[t._v("使用方法：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// webpack.config.js")]),t._v("\n\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  module"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    loaders"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\.js$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" loader"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint-loader"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exclude"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("node_modules")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("当使用编译类的loader（如：babel-loader）时，要确保处理顺序正确，从下到止为处理顺序，所以语法检查要放在最下面。")])])]),t._v(" "),a("h4",{attrs:{id:"_1-2-eslint-friendly-formatter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-eslint-friendly-formatter"}},[t._v("#")]),t._v(" 1.2 eslint-friendly-formatter")]),t._v(" "),a("p",[t._v("​\t\t这个组件可以友好地提示语法问题，并且支持点击错误提示直接打开iTem2文件。")]),t._v(" "),a("h4",{attrs:{id:"_1-3-eslint-config-standard"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-eslint-config-standard"}},[t._v("#")]),t._v(" 1.3 eslint-config-standard")]),t._v(" "),a("p",[t._v("​\t\t如果觉得自己配置很麻烦，也可以使用这个组件，它为大家提供了一些可共享的JavaScript标准格式配置。它的用法也非常简单，在自己的工程中加入如下 "),a("code",[t._v(".eslintrc")]),t._v(" 文件。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"extends"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"standard"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"_1-4-eslint-plugin-html"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-eslint-plugin-html"}},[t._v("#")]),t._v(" 1.4 eslint-plugin-html")]),t._v(" "),a("p",[t._v("一个支持从HTML等文件的 "),a("code",[t._v("<script>")]),t._v(" 标签中读取配置的插件。")])])}),[],!1,null,null,null);s.default=n.exports}}]);