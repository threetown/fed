(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{385:function(t,v,_){t.exports=_.p+"assets/img/js-oop.a83706d4.png"},550:function(t,v,_){"use strict";_.r(v);var e=_(44),s=Object(e.a)({},(function(){var t=this,v=t.$createElement,e=t._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"oop"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oop"}},[t._v("#")]),t._v(" OOP")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://fynn90.github.io/2019/09/12/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%8E%9F%E5%88%99/",target:"_blank",rel:"noopener noreferrer"}},[t._v("面向对象设计模式原则"),e("OutboundLink")],1)])]),t._v(" "),e("p",[e("img",{attrs:{src:_(385),alt:"js oop"}})]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("面向对象设计模式原则")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("标记")]),t._v(" "),e("th",[t._v("英文全称")]),t._v(" "),e("th",[t._v("设计模式原则名称")]),t._v(" "),e("th",[t._v("简单定义")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("SRP")]),t._v(" "),e("td",[t._v("Single Responsibility Principle")]),t._v(" "),e("td",[t._v("单一职责原则")]),t._v(" "),e("td",[t._v("一个类只负责一个功能领域中的相应职责")])]),t._v(" "),e("tr",[e("td",[t._v("OCP")]),t._v(" "),e("td",[t._v("Open Closed Principle")]),t._v(" "),e("td",[t._v("开闭原则")]),t._v(" "),e("td",[t._v("对扩展开放，对修改关闭")])]),t._v(" "),e("tr",[e("td",[t._v("LSP")]),t._v(" "),e("td",[t._v("Liskov Substitution Principle")]),t._v(" "),e("td",[t._v("里氏代换原则")]),t._v(" "),e("td",[t._v("所有引用基类的地方必须能透明地使用其子类的对象")])]),t._v(" "),e("tr",[e("td",[t._v("ISP")]),t._v(" "),e("td",[t._v("Interface Segregation Principle")]),t._v(" "),e("td",[t._v("接口隔离原则")]),t._v(" "),e("td",[t._v("类之间的依赖关系应该建立在最小的接口上")])]),t._v(" "),e("tr",[e("td",[t._v("DIP")]),t._v(" "),e("td",[t._v("Dependency Inversion Principle")]),t._v(" "),e("td",[t._v("依赖倒转原则")]),t._v(" "),e("td",[t._v("依赖于抽象，不能依赖于具体实现")])]),t._v(" "),e("tr",[e("td",[t._v("LOD")]),t._v(" "),e("td",[t._v("Law of Demeter")]),t._v(" "),e("td",[t._v("迪米特法则")]),t._v(" "),e("td",[t._v("一个软件实体应当尽可能少的与其他实体发生相互作")])]),t._v(" "),e("tr",[e("td",[t._v("CARP")]),t._v(" "),e("td",[t._v("Composite/Aggregate Reuse Principle")]),t._v(" "),e("td",[t._v("合成/聚合复用原则")]),t._v(" "),e("td",[t._v("尽量使用合成/聚合，而不是通过继承达到复用的目的")])])])])]),t._v(" "),e("h2",{attrs:{id:"es5之前"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#es5之前"}},[t._v("#")]),t._v(" ES5之前")]),t._v(" "),e("ul",[e("li",[t._v("构造函数")])]),t._v(" "),e("h2",{attrs:{id:"es6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#es6"}},[t._v("#")]),t._v(" ES6")]),t._v(" "),e("ul",[e("li",[t._v("class")])]),t._v(" "),e("h2",{attrs:{id:"继承"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#继承"}},[t._v("#")]),t._v(" 继承")]),t._v(" "),e("p",[t._v("原型、原型链")])])}),[],!1,null,null,null);v.default=s.exports}}]);