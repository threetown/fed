(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{568:function(v,_,t){"use strict";t.r(_);var d=t(44),r=Object(d.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"一、什么是洗数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、什么是洗数据"}},[v._v("#")]),v._v(" 一、什么是洗数据")]),v._v(" "),t("h3",{attrs:{id:"_1-含义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-含义"}},[v._v("#")]),v._v(" 1. 含义")]),v._v(" "),t("p",[v._v("​    含义：洗数据是指将线上已存在的数据进行某些变动，或是修改数值对应字段名称亦或由于数据库表结构发生变化到导致数据存储变更的一类操作")]),v._v(" "),t("h3",{attrs:{id:"_2-什么情况下需要洗数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-什么情况下需要洗数据"}},[v._v("#")]),v._v(" 2. 什么情况下需要洗数据")]),v._v(" "),t("ul",[t("li",[v._v("一是字段数据变更：新增或修改字段名称、更改字段对应数据值、删除某些弃用字段")]),v._v(" "),t("li",[v._v("二是表结构变更：需求变化，现有的存储模型不支持，需变更数据存储格式、新建库表结构、删除无用表")])]),v._v(" "),t("h2",{attrs:{id:"二、为什么重视洗数据逻辑的验证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、为什么重视洗数据逻辑的验证"}},[v._v("#")]),v._v(" 二、为什么重视洗数据逻辑的验证")]),v._v(" "),t("ul",[t("li",[v._v("洗数据代码执行后数据不可逆性较强，不能随便执行洗数据，需更谨慎")]),v._v(" "),t("li",[v._v("修复洗数据造成的影响成本及代价较高，洗数据导致的问题较普通Bug更具影响力，洗数据后不能确保是否存在某些客户创建或修改数据，一旦存在老数据和新数据相互交叉的情况，修复数据难度会随着上线的时间呈指数型增长，所以提前验证洗数据逻辑对于修复成本来说也十分重要")]),v._v(" "),t("li",[v._v("对一些敏感数据的洗数据操作对客户影响更大，洗数据涉及线上客户使用的数据，对于客户操作及使用习惯有很大影响，尤其是工资发放、社保缴纳之类，一旦洗错，无疑会受到严重客诉，甚至造成客户对系统使用幸福感的降低及对系统的不信任")])]),v._v(" "),t("h2",{attrs:{id:"三、如何更全面验证洗数据逻辑"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、如何更全面验证洗数据逻辑"}},[v._v("#")]),v._v(" 三、如何更全面验证洗数据逻辑")]),v._v(" "),t("p",[v._v("为更全面的验证洗数据的逻辑是否合理，需严格遵循以下验证规范")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[v._v("步骤")])]),v._v(" "),t("th",[t("strong",[v._v("阶段")])]),v._v(" "),t("th",[t("strong",[v._v("是否必须")])]),v._v(" "),t("th",[t("strong",[v._v("规范")])]),v._v(" "),t("th",[t("strong",[v._v("备注")])])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("1")]),v._v(" "),t("td",[v._v("需求评审")]),v._v(" "),t("td"),v._v(" "),t("td",[v._v("敲定该项目是否需要洗数据，洗数据范围包括哪些")]),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("2")]),v._v(" "),t("td",[v._v("技术方案设计评审")]),v._v(" "),t("td"),v._v(" "),t("td",[v._v("① 向开发问清楚洗数据的处理逻辑，并review洗数据逻辑是否合理"),t("br"),v._v("② 提醒开发每一条洗数据方案都要有对应的回滚方案，确定是否能重复执行洗数据")]),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("3")]),v._v(" "),t("td",[v._v("设计测试用例")]),v._v(" "),t("td"),v._v(" "),t("td",[v._v("① 测试排期需要认真考虑验证洗数据时间"),t("br"),v._v("② 针对洗数据较为复杂的场景，需同开发查取线上客户相关逻辑数据特点"),t("br"),v._v("③ 针对查到客户数据特点，有针对行的制造全面且有效的老数据"),t("br"),v._v("④ 根据上述1、2、3，在用例中明确体现要构造的被清洗数据有哪些，覆盖哪些表。"),t("br"),v._v("⑤ 通过python脚本或者sql脚本一一读取原数据和洗过的数据进行对比，验证通过后方可认为清洗成功。可做到100%全覆盖。")]),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("4")]),v._v(" "),t("td",[v._v("用例评审")]),v._v(" "),t("td"),v._v(" "),t("td",[v._v("① 针对洗数据场景和开发一起review造数据的全面性和有效性"),t("br"),v._v("② 根据提测时间，确定何时造数据，以及手动造数据后数据是否需要备份多份，供验问题使用")]),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("5")]),v._v(" "),t("td",[v._v("review洗数据代码")]),v._v(" "),t("td"),v._v(" "),t("td",[v._v("① 测试需要提前了解开发洗数据代码编写逻辑，同开发在review洗数据代码时，通过开发对代码的讲解或测试自己阅读代码，判断是否存在逻辑问题及漏洞，"),t("br"),v._v("② 确定开发是否若存在通过粘贴复制的代码，若是，需要着重查看被复制的变量是否有误"),t("br"),v._v("③ 监督开发编写洗数据成功失败对比参照脚本，便于精准定位洗数据失败的原因")]),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("6")]),v._v(" "),t("td",[v._v("提测")]),v._v(" "),t("td"),v._v(" "),t("td",[v._v("① 确定提测内容是否包含洗数据部分，若包含，确定开发已自测洗数据逻辑"),t("br"),v._v("② 洗数据后，必须回归洗数据功能以及回滚方案是否正确"),t("br"),v._v("③ 确保回滚操作步骤被验证过。")]),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("7")]),v._v(" "),t("td",[v._v("测试环境测试")]),v._v(" "),t("td"),v._v(" "),t("td",[v._v("若洗数据的脚本和sql不止一个，需开发同测试配合，执行一条洗数据，验证一项数据，通过后方可进行下一条，否则必须修复有问题的洗数据脚本或sql重新验证通过方可")]),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("8")]),v._v(" "),t("td",[v._v("预发布测试")]),v._v(" "),t("td"),v._v(" "),t("td",[v._v("含洗数据的项目必须在预发布环境执行单个公司洗数据和全量洗数据的过程，且全量洗时必须有成功与失败的记录，以及统计全量洗数据的时间")]),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("9")]),v._v(" "),t("td",[v._v("灰度+上线")]),v._v(" "),t("td"),v._v(" "),t("td",[v._v("发布项目代码后，先回归正常业务功能，保证功能点正常后，执行全量洗数据，验证洗数据是否正确")]),v._v(" "),t("td")])])]),v._v(" "),t("h2",{attrs:{id:"四、洗数据具体注意点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、洗数据具体注意点"}},[v._v("#")]),v._v(" 四、洗数据具体注意点")]),v._v(" "),t("p",[v._v("鉴于对洗数据把握度欠佳的情况，梳理一些洗数据具体的注意点")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("项目")]),v._v(" "),t("th",[v._v("是否必须")]),v._v(" "),t("th",[v._v("备注")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("洗数据步骤是否可遵循可重复")]),v._v(" "),t("td",[v._v("是")]),v._v(" "),t("td",[v._v("1、洗数据前必须对要清洗的数据进行备份"),t("br"),v._v("2、洗数据的步骤必须形成明确的步骤，且能脚本化的要脚本化")])]),v._v(" "),t("tr",[t("td",[v._v("能否重复洗")]),v._v(" "),t("td",[v._v("否")]),v._v(" "),t("td",[v._v("1、如果在洗数据完成以后，存在不可逆的时候，洗的数据有问题，就不能恢复了，那么线上用户就不能正常使用了，所以要尽量避免这种情况。如果实在不能避免，那就要备份对应的表或者库。"),t("br"),v._v("2、如果能够重复洗，那么洗完了，有问题，可以快速的洗回去，不至于出现问题。")])]),v._v(" "),t("tr",[t("td",[v._v("洗数据的方式")]),v._v(" "),t("td",[v._v("否")]),v._v(" "),t("td",[v._v("1、SQL洗，这种方式的可以方便我们检查update、select的语句是不是写的不合理，也是学习写复杂SQL的一种方式，以及让开发解释一下对应的SQL影响范围。"),t("br"),v._v("2、代码洗，这种方式对于测试来说，除了review代码外，是不能帮助开发来发现问题，相对风险高点。 如果是代码洗，则代码必须经过了review。")])]),v._v(" "),t("tr",[t("td",[v._v("修改表字段存在非空但是没有默认值")]),v._v(" "),t("td",[v._v("否")]),v._v(" "),t("td",[v._v("1、开发在写新的业务代码时，可能需要在原有的旧表上加字段或者干脆修改原有的字段类型、意义等，这个时候，我们作为测试需要关注一下.最好的格式是如下类型的："),t("br"),t("code",[v._v("old_id int(11) NOT NULL DEFAULT '0' COMMENT '旧主键' （要求非空，但是有默认值）")]),v._v("，如果开发明确说明不能有默认值，那么就要考虑一下，老用户在使用旧表的时候，你修改了原有字段或者加了新的字段到旧表上，原有的业务代码能否插入到数据库的旧表中。"),t("br"),v._v(" 2、同样存在部分情况下，在旧表加字段，已有的业务代码入库没有影响，这个具体情况具体分析，不能一概而论。在这种情况下，可以在上灰度之就加上，提前一天晚上找运维加上，第二天上灰度的时候，就直接开测就行了，不需要在第二天用户已经在正常使用系统的时候，再执行SQL，有可能会影响到客户的正常使用。")])]),v._v(" "),t("tr",[t("td",[v._v("能否单独洗一个公司")]),v._v(" "),t("td",[v._v("是")]),v._v(" "),t("td",[v._v("比较常见的问题是，开发写了一个脚本或者一个sql语句，直接就更新所有公司了，然后因为逻辑比较复杂或者影响的关联表太多，现在要恢复回去太麻烦，那就成了死循环了，要洗新数据，还要先恢复老数据，而老数据的恢复又要一大坨代码来保证，所以，这个地方是一个强制要求，必须能够单独洗一个公司！！如果开发使用的是代码洗数据，在预发布环境洗全库的数据时，要让开发不断优化自己的代码，解决洗全库情况下，线上真实用户的数据不能被洗成功的情况。因为我们在预发布环境的测试公司，必然不可能覆盖线上所有用户的真实使用场景，所以这一步是必须的，也是很有必要的，但是不是我们测试能够回归的，我们也不需要回归，让开发修复完即可。")])]),v._v(" "),t("tr",[t("td",[v._v("什么时候测试洗数据")]),v._v(" "),t("td",[v._v("是")]),v._v(" "),t("td",[v._v("其实我们测试过程中，如果测试环境的数据已经洗了好多次了，要不洗可能我们根本主流程就跑不通了。这种情况下测试环境的洗数据，其实没法测，也不需要测。什么时候测呢，在上预发布环境的时候测洗数据。而且我们要在预发布环境洗数据之前先准备待洗的数据，不能等洗完了，我们才想起来数据还没准备呢。其次，如果预发布环境冲突，不得不在测试环境测洗数据时，需要将代码发回master后，我们测试造一下全面数据，再由开发部署新代码，然后一步一步验洗数据")])]),v._v(" "),t("tr",[t("td",[v._v("洗数据的时间长短")]),v._v(" "),t("td",[v._v("是")]),v._v(" "),t("td",[v._v('在预发布环境，执行全量洗数据的时间长短，一定要记录下来，这个点在运维同学在预发布环境执行洗数据的脚本时，会记录下来，如果没有记录，要及时找运维同学确认原因。这个时间长短影响的就是具体上线时，线上相应模块"不可用"的时间长短。可能开发同学会解释不会影响到已有的老用户，但是当我们在线上或者灰度洗数据操作旧表时，不要忘记老用户也在使用老逻辑写入旧表，这种情况下洗数据的时间越长，在洗数据过程中产生新的旧数据的时间可能性越大。也就是:上线前->灰度洗数据时->上线后，这3个阶段中，在灰度洗数据的过程中产生的脏数据，还要再洗一遍。所以这个时间长度，就是判断需要不需要再次洗一遍的依据。')])]),v._v(" "),t("tr",[t("td",[v._v('能否"断点续传"')]),v._v(" "),t("td",[v._v("是")]),v._v(" "),t("td",[v._v('断点续传是BT下载中的名词，大概意思就是在当次没有完成下载时，还可以在以后继续在上次停下来的地方继续下载。对应到洗数据这里，需要考虑的是当洗数据的数据量较大、时间较长时，能不能在因为各种原因导致洗数据卡住时，下次再洗能不能继续在上次停止的地方，接着洗，而不是全部重新来一遍。因为有的情况下，有的数据洗了一遍，再洗第二遍就会出问题。所以这种情况下，就要开发明确一下，能否"断点续传"，这种情况下的洗数据，一般是通过代码洗，在使用代码洗，通过代码洗的时候，开发可以通过加时间戳，或者统计数量，以及对洗过的数据打标记等多种方式来进行"断点续传"。所以这个也是一个有必要且有意义的事情。')])]),v._v(" "),t("tr",[t("td",[v._v("是否需要发断服公告")]),v._v(" "),t("td",[v._v("是")]),v._v(" "),t("td",[v._v("在部分情况下，洗数据会造成线上用户不能正常使用要上线的功能，那么就需要考虑提前发断服公告，断服公告的意义，就在于对应的模块的功能不可用。在上预发布环境的时候，就要明确洗数据的影响范围，是否需要发断服公告，线上用户不能使用到什么程度，以及洗数据的过程如果时间比较长，在洗数据这个过程中，如果有线上用户正常使用，产生了新的数据，再洗的难度大不大。会不会对用户的正常使用产生困扰。如果会的话，就有必要发，具体断服公告的内容，需要产品给出对应的文案，然后对应负责人发出去。")])]),v._v(" "),t("tr",[t("td",[v._v("是否需要屏蔽线上用户操作入口")]),v._v(" "),t("td",[v._v("否")]),v._v(" "),t("td",[v._v("在部分情况下，如果用户正常使用，而我们新的需求不允许老用户在这段时间内继续操作，因为新产生的数据，我们不想处理，或者处理起来比较麻烦，为了解决这个问题。干脆就屏蔽掉用户的操作入口。具体来说就是需要产品告知用户，在具体的上线时间点，XXX功能将做升级服务，暂时不可用。当然这个动作其实很危险，不能随意的想当然屏蔽用户的正常使用。比如：打卡高峰期，你升级打卡服务，不让用户使用打卡功能。类似的，要考虑线上用户的真实使用场景，必要的情况下，需要开发同学去线上查询一下对应的操作，线上用户使用情况。大概的一个使用时间，在尽量小的影响范围内，去做屏蔽动作。降低客户投诉的风险。")])]),v._v(" "),t("tr",[t("td",[v._v("什么时间执行线上数据库洗数据")]),v._v(" "),t("td",[v._v("是")]),v._v(" "),t("td",[v._v("1.在部分情况下，有可能需要在上线前一天洗数据，这种情况是考虑到，对已有的业务逻辑不会产生影响下，有的是因为执行时间长，有的是因为是第二天就上灰度，来了就开始测试，可以提前进行。"),t("br"),v._v("2.在执行洗数据前，我们要提前在线上数据库准备一下老数据。在能灰度测试的情况下，要明确指明先洗一个测试公司，如果测试公司测试通过没有问题后，在正式上线完所有的功能后，再次洗全库数据。此时线上所有的功能已经回归完毕，且没有bug.然后再执行全库洗数据。"),t("br"),v._v("3.数据清洗过程必须由QA看着执行。")])])])])])}),[],!1,null,null,null);_.default=r.exports}}]);