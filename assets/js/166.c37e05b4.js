(window.webpackJsonp=window.webpackJsonp||[]).push([[166],{681:function(e,r,t){"use strict";t.r(r);var a=t(44),s=Object(a.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"前置教育"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前置教育"}},[e._v("#")]),e._v(" 前置教育")]),e._v(" "),t("h2",{attrs:{id:"模块-modules"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模块-modules"}},[e._v("#")]),e._v(" 模块（Modules）")]),e._v(" "),t("p",[e._v("在"),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Modular_programming",target:"_blank",rel:"noopener noreferrer"}},[e._v("模块化编程"),t("OutboundLink")],1),e._v("中，开发者将程序分解为功能离散的 chunk，并称之为 "),t("strong",[e._v("模块")]),e._v("。")]),e._v(" "),t("p",[e._v("每个模块都拥有小于完整程序的体积，使得验证、调试及测试变得轻而易举。 精心编写的 "),t("strong",[e._v("模块")]),e._v(" 提供了可靠的抽象和封装界限，使得应用程序中每个模块都具备了条理清晰的设计和明确的目的。")]),e._v(" "),t("p",[e._v("Node.js 从一开始就支持模块化编程。 然而，web 的 "),t("em",[e._v("模块化")]),e._v(" 正在缓慢支持中。 在 web 界存在多种支持 JavaScript 模块化的工具，这些工具各有优势和限制。 webpack 从这些系统中汲取了经验和教训，并将 "),t("em",[e._v("模块")]),e._v(" 的概念应用到项目的任何文件中。")]),e._v(" "),t("h3",{attrs:{id:"何为-webpack-模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#何为-webpack-模块"}},[e._v("#")]),e._v(" 何为 webpack 模块")]),e._v(" "),t("p",[e._v("与 "),t("a",{attrs:{href:"https://nodejs.org/api/modules.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Node.js 模块"),t("OutboundLink")],1),e._v("相比，webpack "),t("em",[e._v("模块")]),e._v(" 能以各种方式表达它们的依赖关系。下面是一些示例：")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import",target:"_blank",rel:"noopener noreferrer"}},[e._v("ES2015 "),t("code",[e._v("import")]),t("OutboundLink")],1),e._v(" 语句")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.commonjs.org/specs/modules/1.0/",target:"_blank",rel:"noopener noreferrer"}},[e._v("CommonJS"),t("OutboundLink")],1),e._v(" "),t("code",[e._v("require()")]),e._v(" 语句")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/amdjs/amdjs-api/blob/master/AMD.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("AMD"),t("OutboundLink")],1),e._v(" "),t("code",[e._v("define")]),e._v(" 和 "),t("code",[e._v("require")]),e._v(" 语句")]),e._v(" "),t("li",[e._v("css/sass/less 文件中的 "),t("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/@import",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("@import")]),e._v(" 语句"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[e._v("stylesheet "),t("code",[e._v("url(...)")]),e._v(" 或者 HTML "),t("code",[e._v("<img src=...>")]),e._v(" 文件中的图片链接。")])]),e._v(" "),t("h3",{attrs:{id:"支持的模块类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#支持的模块类型"}},[e._v("#")]),e._v(" 支持的模块类型")]),e._v(" "),t("p",[e._v("webpack 天生支持如下模块类型：")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://webpack.docschina.org/guides/ecma-script-modules",target:"_blank",rel:"noopener noreferrer"}},[e._v("ECMAScript 模块"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("CommonJS 模块")]),e._v(" "),t("li",[e._v("AMD 模块")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://webpack.docschina.org/guides/asset-modules",target:"_blank",rel:"noopener noreferrer"}},[e._v("Assets"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("WebAssembly 模块")])]),e._v(" "),t("p",[e._v("通过 "),t("strong",[e._v("loader")]),e._v(" 可以使 webpack 支持多种语言和预处理器语法编写的模块。"),t("strong",[e._v("loader")]),e._v(" 向 webpack 描述了如何处理非原生"),t("em",[e._v("模块")]),e._v("，并将相关"),t("strong",[e._v("依赖")]),e._v("引入到你的 "),t("strong",[e._v("bundles")]),e._v("中。 webpack 社区已经为各种流行的语言和预处理器创建了 "),t("em",[e._v("loader")]),e._v("，其中包括：")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://coffeescript.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("CoffeeScript"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.typescriptlang.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("TypeScript"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://babeljs.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("ESNext (Babel)"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://sass-lang.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sass"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://lesscss.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Less"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://stylus-lang.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Stylus"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://elm-lang.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Elm"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("当然还有更多！总得来说，webpack 提供了可定制，强大且丰富的 API，允许在 "),t("strong",[e._v("任何技术栈")]),e._v(" 中使用，同时支持在开发、测试和生产环境的工作流中做到 "),t("strong",[e._v("无侵入性")]),e._v("。")]),e._v(" "),t("p",[e._v("关于 loader 的相关信息，请参考 "),t("a",{attrs:{href:"https://webpack.docschina.org/loaders",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[e._v("loader 列表")]),t("OutboundLink")],1),e._v(" 或 "),t("a",{attrs:{href:"https://webpack.docschina.org/api/loaders",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[e._v("自定义 loader")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h2",{attrs:{id:"模块化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模块化"}},[e._v("#")]),e._v(" 模块化")]),e._v(" "),t("p",[e._v("在 webpack 打包应用程序时，你可以选择各种模块语法风格，包括 "),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/ECMAScript#6th_Edition_-_ECMAScript_2015",target:"_blank",rel:"noopener noreferrer"}},[e._v("ES6"),t("OutboundLink")],1),e._v("，"),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/CommonJS",target:"_blank",rel:"noopener noreferrer"}},[e._v("CommonJS"),t("OutboundLink")],1),e._v(" 和 "),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Asynchronous_module_definition",target:"_blank",rel:"noopener noreferrer"}},[e._v("AMD"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h3",{attrs:{id:"es6-推荐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#es6-推荐"}},[e._v("#")]),e._v(" ES6 (推荐)")]),e._v(" "),t("p",[e._v("webpack 2 支持原生的 ES6 模块语法，意味着你无须额外引入 babel 这样的工具，就可以使用 "),t("code",[e._v("import")]),e._v(" 和 "),t("code",[e._v("export")]),e._v("。但是注意，如果使用其他的 ES6+ 特性，仍然需要引入 babel。")]),e._v(" "),t("h2",{attrs:{id:"解析器-resolvers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解析器-resolvers"}},[e._v("#")]),e._v(" 解析器（Resolvers）")]),e._v(" "),t("p",[e._v("解析器是使用 "),t("code",[e._v("enhanced-resolve")]),e._v(" 库创建的。"),t("code",[e._v("Resolver")]),e._v(" 类 拓展了 "),t("code",[e._v("tapable")]),e._v(" 类，并使用 "),t("code",[e._v("tapable")]),e._v(" 来提供了一些钩子。 "),t("code",[e._v("enhanced-resolve")]),e._v(" 可以直接用于创建新的解析器， 但是，任何 "),t("a",{attrs:{href:"https://webpack.docschina.org/api/node/#compiler-instance",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("compiler")]),e._v(" 实例"),t("OutboundLink")],1),e._v(" 都有一些解析器实例，可以 被 "),t("code",[e._v("tap")]),e._v(" 进去。")]),e._v(" "),t("p",[e._v("在继续阅读之前，请确保你已经读过 "),t("a",{attrs:{href:"https://github.com/webpack/enhanced-resolve",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("enhanced-resolve")]),t("OutboundLink")],1),e._v(" 和 "),t("a",{attrs:{href:"https://webpack.docschina.org/api/plugins/#tapable",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("tapable")]),t("OutboundLink")],1),e._v(" 文档。")]),e._v(" "),t("h2",{attrs:{id:"模块解析-module-resolution"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模块解析-module-resolution"}},[e._v("#")]),e._v(" 模块解析（Module Resolution）")]),e._v(" "),t("p",[e._v("resolver 帮助 webpack 从每个 "),t("code",[e._v("require")]),e._v("/"),t("code",[e._v("import")]),e._v(" 语句中，找到需要引入到 bundle 中的模块代码。 当打包模块时，webpack 使用 "),t("a",{attrs:{href:"https://github.com/webpack/enhanced-resolve",target:"_blank",rel:"noopener noreferrer"}},[e._v("enhanced-resolve"),t("OutboundLink")],1),e._v(" 来解析文件路径。")]),e._v(" "),t("h3",{attrs:{id:"webpack-中的解析规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack-中的解析规则"}},[e._v("#")]),e._v(" webpack 中的解析规则")]),e._v(" "),t("p",[e._v("使用 "),t("code",[e._v("enhanced-resolve")]),e._v("，webpack 能解析三种文件路径：")]),e._v(" "),t("h4",{attrs:{id:"绝对路径"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#绝对路径"}},[e._v("#")]),e._v(" 绝对路径")]),e._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'/home/me/file'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'C:\\\\Users\\\\me\\\\file'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),t("p",[e._v("由于已经获得文件的绝对路径，因此不需要再做进一步解析。")]),e._v(" "),t("h4",{attrs:{id:"相对路径"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相对路径"}},[e._v("#")]),e._v(" 相对路径")]),e._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'../src/file1'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./file2'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),t("p",[e._v("在这种情况下，使用 "),t("code",[e._v("import")]),e._v(" 或 "),t("code",[e._v("require")]),e._v(" 的资源文件所处的目录，被认为是上下文目录。在 "),t("code",[e._v("import/require")]),e._v(" 中给定的相对路径，会拼接此上下文路径，来生成模块的绝对路径。")]),e._v(" "),t("h4",{attrs:{id:"模块路径"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模块路径"}},[e._v("#")]),e._v(" 模块路径")]),e._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'module'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'module/lib/file'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),t("p",[e._v("在 "),t("a",{attrs:{href:"https://webpack.docschina.org/configuration/resolve/#resolvemodules",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("resolve.modules")]),t("OutboundLink")],1),e._v(" 中指定的所有目录检索模块。 你可以通过配置别名的方式来替换初始模块路径，具体请参照 "),t("a",{attrs:{href:"https://webpack.docschina.org/configuration/resolve/#resolvealias",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("resolve.alias")]),t("OutboundLink")],1),e._v(" 配置选项。")]),e._v(" "),t("ul",[t("li",[e._v("如果 package 中包含 "),t("code",[e._v("package.json")]),e._v(" 文件，那么在 "),t("a",{attrs:{href:"https://webpack.docschina.org/configuration/resolve/#resolveexportsfields",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("resolve.exportsFields")]),t("OutboundLink")],1),e._v(" 配置选项中指定的字段会被依次查找，"),t("code",[e._v("package.json")]),e._v(" 中的第一个字段会根据 "),t("a",{attrs:{href:"https://webpack.docschina.org/guides/package-exports/",target:"_blank",rel:"noopener noreferrer"}},[e._v("package 导出指南"),t("OutboundLink")],1),e._v("确定 package 中可用的 export。")])]),e._v(" "),t("p",[e._v("一旦根据上述规则解析路径后，resolver 将会检查路径是指向文件还是文件夹。如果路径指向文件：")]),e._v(" "),t("ul",[t("li",[e._v("如果文件具有扩展名，则直接将文件打包。")]),e._v(" "),t("li",[e._v("否则，将使用 "),t("a",{attrs:{href:"https://webpack.docschina.org/configuration/resolve/#resolveextensions",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("resolve.extensions")]),t("OutboundLink")],1),e._v(" 选项作为文件扩展名来解析，此选项会告诉解析器在解析中能够接受那些扩展名（例如 "),t("code",[e._v(".js")]),e._v("，"),t("code",[e._v(".jsx")]),e._v("）。")])]),e._v(" "),t("p",[e._v("如果路径指向一个文件夹，则进行如下步骤寻找具有正确扩展名的文件：")]),e._v(" "),t("ul",[t("li",[e._v("如果文件夹中包含 "),t("code",[e._v("package.json")]),e._v(" 文件，则会根据 "),t("a",{attrs:{href:"https://webpack.docschina.org/configuration/resolve/#resolve-mainfields",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("resolve.mainFields")]),t("OutboundLink")],1),e._v(" 配置中的字段顺序查找，并根据 "),t("code",[e._v("package.json")]),e._v(" 中的符合配置要求的第一个字段来确定文件路径。")]),e._v(" "),t("li",[e._v("如果不存在 "),t("code",[e._v("package.json")]),e._v(" 文件或 "),t("a",{attrs:{href:"https://webpack.docschina.org/configuration/resolve/#resolvemainfields",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("resolve.mainFields")]),t("OutboundLink")],1),e._v(" 没有返回有效路径，则会根据 "),t("a",{attrs:{href:"https://webpack.docschina.org/configuration/resolve/#resolvemainfiles",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("resolve.mainFiles")]),t("OutboundLink")],1),e._v(" 配置选项中指定的文件名顺序查找，看是否能在 import/require 的目录下匹配到一个存在的文件名。")]),e._v(" "),t("li",[e._v("然后使用 "),t("a",{attrs:{href:"https://webpack.docschina.org/configuration/resolve/#resolveextensions",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("resolve.extensions")]),t("OutboundLink")],1),e._v(" 选项，以类似的方式解析文件扩展名。")])]),e._v(" "),t("p",[e._v("webpack 会根据构建目标，为这些选项提供合理的"),t("a",{attrs:{href:"https://webpack.docschina.org/configuration/resolve",target:"_blank",rel:"noopener noreferrer"}},[e._v("默认"),t("OutboundLink")],1),e._v("配置。")]),e._v(" "),t("h3",{attrs:{id:"解析-loader"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解析-loader"}},[e._v("#")]),e._v(" 解析 loader")]),e._v(" "),t("p",[e._v("loader 的解析规则也遵循特定的规范。但是 "),t("a",{attrs:{href:"https://webpack.docschina.org/configuration/resolve/#resolveloader",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("resolveLoader")]),t("OutboundLink")],1),e._v(" 配置项可以为 loader 设置独立的解析规则。")]),e._v(" "),t("h3",{attrs:{id:"缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[e._v("#")]),e._v(" 缓存")]),e._v(" "),t("p",[e._v("每次文件系统访问文件都会被缓存，以便于更快触发对同一文件的多个并行或串行请求。在 "),t("a",{attrs:{href:"https://webpack.docschina.org/configuration/watch/#watch",target:"_blank",rel:"noopener noreferrer"}},[e._v("watch 模式"),t("OutboundLink")],1),e._v(" 下，只有修改过的文件会被从缓存中移出。如果关闭 watch 模式，则会在每次编译前清理缓存。")]),e._v(" "),t("p",[e._v("欲了解更多上述配置信息，请查阅 "),t("a",{attrs:{href:"https://webpack.docschina.org/configuration/resolve",target:"_blank",rel:"noopener noreferrer"}},[e._v("Resolve API"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h2",{attrs:{id:"shimming-预置依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shimming-预置依赖"}},[e._v("#")]),e._v(" Shimming 预置依赖")]),e._v(" "),t("p",[e._v('webpack compiler 能够识别遵循 ES2015 模块语法、CommonJS 或 AMD 规范编写的模块。然而，一些 third party(第三方库) 可能会引用一些全局依赖（例如 jQuery 中的 $）。因此这些 library 也可能会创建一些需要导出的全局变量。这些 "broken modules(不符合规范的模块)" 就是 shimming(预置依赖) 发挥作用的地方。')]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),t("p",[e._v("我们不推荐使用全局依赖！webpack 背后的整个理念是使前端开发更加模块化。也就是说，需要编写具有良好的封闭性(well contained)、不依赖于隐含依赖（例如，全局变量）的彼此隔离的模块。请只在必要的时候才使用这些特性。")])]),e._v(" "),t("p",[t("strong",[e._v("webpack.config.js")])]),e._v(" "),t("div",{staticClass:"language-diff extra-class"},[t("pre",{pre:!0,attrs:{class:"language-diff"}},[t("code",[t("span",{pre:!0,attrs:{class:"token unchanged"}},[t("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("const path = require('path');\n")])]),t("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[t("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("const webpack = require('webpack');\n")])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token unchanged"}},[t("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("module.exports = {\n")]),t("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("  entry: './src/index.js',\n")]),t("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("  output: {\n")]),t("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("    filename: 'main.js',\n")]),t("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("    path: path.resolve(__dirname, 'dist'),\n")]),t("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("  },\n")])]),t("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[t("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("  plugins: [\n")]),t("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("    new webpack.ProvidePlugin({\n")]),t("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("     $: 'jQuery',\n")]),t("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("   }),\n")]),t("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("  ],\n")])]),t("span",{pre:!0,attrs:{class:"token unchanged"}},[t("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("};\n")])])])])]),t("h1",{attrs:{id:"参考文献"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[e._v("#")]),e._v(" 参考文献")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://webpack.docschina.org/concepts/modules/",target:"_blank",rel:"noopener noreferrer"}},[e._v("模块（Modules）"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://webpack.docschina.org/api/module-methods/",target:"_blank",rel:"noopener noreferrer"}},[e._v("模块方法"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://webpack.docschina.org/api/resolvers/",target:"_blank",rel:"noopener noreferrer"}},[e._v("解析器（Resolvers）"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://webpack.docschina.org/concepts/module-resolution/",target:"_blank",rel:"noopener noreferrer"}},[e._v("模块解析"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://webpack.docschina.org/guides/shimming/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Shimming 预置依赖"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=s.exports}}]);